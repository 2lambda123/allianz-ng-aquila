{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parserOptions": {
                "project": ["tsconfig.json"],
                "createDefaultProgram": true
            },
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@angular-eslint/base",
                "plugin:@angular-eslint/recommended--extra",
                "plugin:@angular-eslint/template/process-inline-templates",
                "plugin:regexp/recommended",
                "prettier"
            ],
            "plugins": ["deprecation", "import", "rxjs", "simple-import-sort"],
            "rules": {
                "deprecation/deprecation": "warn",

                // ==== import / simple-import-sort ====

                "import/first": "error",
                "import/newline-after-import": "error",
                "import/no-duplicates": "error",
                "simple-import-sort/imports": "error",
                "simple-import-sort/exports": "error",

                // ==== regexp ====

                "regexp/no-unused-capturing-group": "off", // TODO check with others
                "regexp/sort-character-class-elements": "warn",

                // ==== rxjs ====

                "rxjs/no-async-subscribe": "warn",
                "rxjs/no-create": "error",
                "rxjs/no-ignored-replay-buffer": "warn",
                "rxjs/no-ignored-takewhile-value": "warn",
                "rxjs/no-index": "error",
                "rxjs/no-internal": "error",
                "rxjs/no-nested-subscribe": "warn",
                "rxjs/no-redundant-notify": "error",
                "rxjs/no-sharereplay": ["error", { "allowConfig": true }],
                "rxjs/no-subject-unsubscribe": "warn",
                "rxjs/no-unbound-methods": "error",
                "rxjs/no-unsafe-takeuntil": "warn",

                // ==== eslint: possible problems ====

                "no-self-compare": "error",
                "no-unreachable-loop": "error",
                "no-unused-private-class-members": "warn",

                // ==== eslint: suggestions ====

                "arrow-body-style": "off", // TODO check with others
                "curly": "error",
                "default-case-last": "error",
                "eqeqeq": ["error", "always", { "null": "ignore" }],
                "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
                "grouped-accessor-pairs": ["off", "setBeforeGet"], // TODO resolve and set warn
                "guard-for-in": "error",
                "no-alert": "off", // TODO in-line with design?
                "no-bitwise": "error",
                "no-caller": "error",
                "no-console": ["off", { "allow": ["warn", "error"] }], // TODO check with others
                "no-continue": "error",
                "no-else-return": "error",
                "no-empty": ["error", { "allowEmptyCatch": true }], // recommended override: allow empty catch block
                "no-eval": "error",
                "no-extend-native": "error",
                "no-extra-bind": "error",
                "no-extra-label": "error",
                "no-iterator": "error",
                "no-lone-blocks": "error",
                "no-lonely-if": "error",
                "no-multi-str": "error",
                "no-new-func": "error",
                "no-new-object": "error",
                "no-new-wrappers": "error",
                "no-octal-escape": "error",
                "no-param-reassign": "off", // TODO resolve and set error
                "no-proto": "error",
                "no-script-url": "error",
                "no-undef-init": "error",
                "no-unneeded-ternary": "error",
                "no-useless-computed-key": ["error", { "enforceForClassMembers": true }],
                "no-useless-concat": "error",
                "no-useless-rename": "error",
                "no-useless-return": "error",
                "no-warning-comments": ["warn", { "terms": ["todo"] }],
                "object-shorthand": ["error", "always", { "avoidQuotes": true }],
                "operator-assignment": "error",
                "prefer-arrow-callback": ["error", { "allowUnboundThis": false }],
                "prefer-const": ["error", { "destructuring": "all" }], // recommended override: loosen destructuring sensitivity to avoid workarounds
                "prefer-exponentiation-operator": "error",
                "prefer-numeric-literals": "error",
                "prefer-object-spread": "error",
                "radix": "error",
                "require-unicode-regexp": "off", // TODO check with others
                "spaced-comment": ["error", "always", { "markers": ["/"], "exceptions": ["*"] }],
                "symbol-description": "error",
                "yoda": ["error", "never", { "exceptRange": true }],

                // ==== @typescript-eslint: supported rules ====

                "@typescript-eslint/array-type": "error",
                "@typescript-eslint/ban-ts-comment": "warn", // TODO resolve and kick
                "@typescript-eslint/class-literal-property-style": ["error", "fields"],
                "@typescript-eslint/consistent-indexed-object-style": ["off", "index-signature"], // TODO test
                "@typescript-eslint/consistent-type-assertions": "error",
                "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
                "@typescript-eslint/consistent-type-exports": "error",
                "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "no-type-imports" }], // TODO test
                "@typescript-eslint/explicit-function-return-type": "off", // TODO test, check options
                "@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "no-public" }],
                "@typescript-eslint/explicit-module-boundary-types": "off", // TODO test, check options (important)
                "@typescript-eslint/method-signature-style": ["error", "method"],
                "@typescript-eslint/no-confusing-non-null-assertion": "error",
                "@typescript-eslint/no-empty-interface": "off", // recommended overide: useful with certain libraries
                "@typescript-eslint/no-explicit-any": "off", // recommended override: used frequently
                "@typescript-eslint/no-non-null-assertion": "off", // recommended override: used frequently
                "@typescript-eslint/no-meaningless-void-operator": ["error", {}], // TODO check options
                "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
                "@typescript-eslint/no-parameter-properties": ["off", { "allows": ["readonly", "protected readonly", "private readonly"] }], // TODO enable separately
                "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
                "@typescript-eslint/no-var-requires": "warn", // TODO resolve and set as error
                "@typescript-eslint/non-nullable-type-assertion-style": "off", // TODO problematic with current specs
                "@typescript-eslint/prefer-function-type": "error",
                "@typescript-eslint/prefer-includes": "error", // TODO enable only for >= 2016
                "@typescript-eslint/prefer-literal-enum-member": "warn",
                "@typescript-eslint/prefer-optional-chain": "warn",
                "@typescript-eslint/prefer-readonly": "off", // TODO check with others
                "@typescript-eslint/prefer-reduce-type-parameter": "error",
                "@typescript-eslint/prefer-return-this-type": "error",
                "@typescript-eslint/prefer-string-starts-ends-with": "error",
                "@typescript-eslint/prefer-ts-expect-error": "error",
                "@typescript-eslint/promise-function-async": "error",
                "@typescript-eslint/require-array-sort-compare": ["error", { "ignoreStringArrays": true }], // TODO test
                "@typescript-eslint/triple-slash-reference": "error", // TODO resolve and kick
                "@typescript-eslint/typedef": "off", // TODO research

                // ==== @typescript-eslint: extension rules ====

                "default-param-last": "off",
                "@typescript-eslint/default-param-last": "error",
                "no-dupe-class-members": "off",
                "@typescript-eslint/no-dupe-class-members": "error",
                "no-duplicate-imports": "off",
                "@typescript-eslint/no-duplicate-imports": "error",
                "no-empty-function": "off",
                "@typescript-eslint/no-empty-function": "off", // recommended override: empty event callbacks are used frequently
                "no-invalid-this": "off",
                "@typescript-eslint/no-invalid-this": "error", // TODO test
                "no-redeclare": "off",
                "@typescript-eslint/no-redeclare": "error",
                "no-shadow": "off",
                "@typescript-eslint/no-shadow": "warn",
                "no-throw-literal": "off",
                "@typescript-eslint/no-throw-literal": "error",
                "no-unused-vars": "off",
                "@typescript-eslint/no-unused-vars": ["warn", { "args": "none", "varsIgnorePattern": "^_+$" }], // recommended override: provide special options
                "no-return-await": "off",
                "@typescript-eslint/return-await": "error",

                // ==== @angular-eslint: typescript ====

                "@angular-eslint/contextual-lifecycle": "error",
                "@angular-eslint/no-conflicting-lifecycle": "warn", // TODO resolve 2 occurrences and enable as error
                "@angular-eslint/no-empty-lifecycle-method": "warn",
                "@angular-eslint/no-output-native": "warn", // related issue: https://github.developer.allianz.io/ilt/ngx-ndbx/issues/3464
                "@angular-eslint/no-output-on-prefix": "warn", // related issue: https://github.developer.allianz.io/ilt/ngx-ndbx/issues/3463
                "@angular-eslint/use-lifecycle-interface": "warn",
                "@angular-eslint/use-pipe-transform-interface": "error"
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended"],
            "rules": {
                // ==== @angular-eslint: template ====

                "@angular-eslint/template/accessibility-alt-text": "warn",
                "@angular-eslint/template/accessibility-elements-content": "warn",
                "@angular-eslint/template/accessibility-label-for": "warn",
                "@angular-eslint/template/accessibility-label-has-associated-control": "warn",
                "@angular-eslint/template/accessibility-table-scope": "off", // TODO resolve 1 occurrence and enable as error
                "@angular-eslint/template/accessibility-valid-aria": "warn",
                "@angular-eslint/template/click-events-have-key-events": "off", // TODO resolve and enable as error
                "@angular-eslint/template/eqeqeq": ["error", { "allowNullOrUndefined": true }],
                "@angular-eslint/template/mouse-events-have-key-events": "error",
                "@angular-eslint/template/no-any": "warn",
                "@angular-eslint/template/no-autofocus": "error",
                "@angular-eslint/template/no-distracting-elements": "error",
                "@angular-eslint/template/no-duplicate-attributes": "warn", // TODO resolve 1 issue and set as error (timefield default required validator)
                "@angular-eslint/template/no-positive-tabindex": "warn",
                "@angular-eslint/template/use-track-by-function": "off" // TODO maybe later?
            }
        }
    ]
}
