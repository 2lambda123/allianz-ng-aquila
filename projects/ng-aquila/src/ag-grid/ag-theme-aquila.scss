@use 'ag-grid-community/styles' as ag;
@use 'sass:map';
@use 'sass:list';

$icon-mapping: (
    filter: '\ea41',
    asc: '\e900',
    desc: '\e901',
    excel: '\ea11',
    last: '\e952',
    none: '\ea62',
    right: '\e903',
    small-right: '\ea31',
    tree-indeterminate: '\e954',
    arrows: '\ec11',
    cross: '\e913',
    first: '\e951',
    left: '\e902',
    menu: '\e928',
    save: '\e917',
);
// TODO: ag-border-color for aposin
// note: the sass API does some auto magic with deriving colors when you set some variables. this does not work if we want to use one of our
// css variables, the sass build will throw an error if that happens. the solution is to move the declaration then into the .ag-theme-aquila block
// and also find the derived colors that need to be adjusted manually
$aquila-theme: (
    theme: aquila,
    extend-theme: alpine,
    --ag-card-radius: 4px,
    --ag-background-color: transparent,
    --ag-popup-shadow: var(--shadow-small),
    --ag-card-shadow: var(--shadow-large),
    --ag-font-family: var(--font-family),
    --ag-header-background-color: var(--table-header-cell-background-color),
    --ag-font-size: var(--table-header-cell-font-size),
    --ag-odd-row-background-color: var(--table-row-background-color),
    --ag-row-border-color: var(--table-cell-border-top-color),
    --ag-row-height: 56px,
    --ag-input-focus-box-shadow: var(--formfield-outline-focus-box-shadow),
    --ag-input-focus-border-color: var(--formfield-outline-active-border-color),
    --ag-checkbox-unchecked-color: var(--checkbox-border-color),
    --ag-checkbox-checked-color: var(--checkbox-selected-background-color),
    --ag-row-hover-color: var(--selectable-table-row-hover-background-color),
    --ag-selected-row-background-color: var(--zebra-table-row-selected-background-color),
    // TODO
    --ag-range-selection-border-color: #008ed6,
    // TODO why different to the NDBX table?
    --ag-header-column-resize-handle-color: #c2c2c2,
    --ag-header-column-resize-handle-height: 50%,
    --ag-border-radius: 4px,
    --ag-widget-vertical-spacing: 12px,
);

@include ag.grid-styles($aquila-theme);

// ICONS where we already want to use the allianz icon font
// we override this for each icon separately until we have the full set
.ag-allianz-icons .ag-icon {
    @each $icon-name, $character in $icon-mapping {
        --ag-icon-font-code-#{$icon-name}: '#{$character}';
    }

    $icon-selectors: ();
    @each $icon-name, $character in $icon-mapping {
        $icon-selectors: map.set($icon-selectors, unquote('&.ag-icon-#{$icon-name}'), $character);
    }
    $joined: list.join(map.keys($icon-selectors), (), comma);
    #{$joined} {
        --ag-icon-font-family: Allianz-Icons;
    }
}

.ag-theme-aquila {
    --ag-foreground-color: var(--text-01);
    --ag-input-border-color: var(--formfield-outline-border-color);

    .ag-header-row:has(+ .ag-header-row-column-filter) {
        --ag-header-column-resize-handle-height: 67px;

        .ag-header-cell {
            overflow: visible !important;
        }

        .ag-header-cell-resize::after {
            top: 12px;
        }

        .ag-header-cell.ag-header-span-height {
            .ag-header-cell-resize::after {
                height: 112px;
            }
        }
    }

    .ag-header-row-column-group:has(+ .ag-header-row) {
        .ag-header-cell-resize {
            margin-right: -8px;
        }

        .ag-header-cell-resize::after {
            height: 109px;
        }
    }

    .ag-header-row-column-group + .ag-header-row .ag-header-cell:not(.ag-header-span-height):has(+ .ag-header-span-height) .ag-header-cell-resize::after {
        display: none;
    }

    .ag-header-cell.ag-header-span-height {
        .ag-header-cell-resize {
            margin-right: 8px !important;
        }
    }

    .ag-cell-focus:not(.ag-cell-range-selected):focus-within {
        border-left-width: 2px;
        border-right-width: 2px;
    }

    .ag-floating-filter-button-button {
        color: var(--interactive-text);
    }

    .ag-floating-filter-input input {
        color: var(--formfield-input-color);
        font-weight: var(--formfield-outline-control-font-weight);
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
    }

    .ag-floating-filter-button {
        margin-left: 0;
        width: calc(var(--ag-icon-size) + 14px);
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: var(--ag-borders-input) var(--ag-input-border-color);
        border-radius: var(--ag-border-radius);
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .ag-floating-filter-input input {
        border-right: none;

        &:focus {
            border-right: var(--ag-borders-input) var(--ag-input-border-color);
        }
    }

    .ag-floating-filter-input .ag-disabled {
        --ag-input-disabled-border-color: var(--formfield-disabled-border-color);
        input:disabled {
            border-right: none;
            color: var(--formfield-disabled-text-color);
            --ag-input-disabled-background-color: transparent;
        }
    }

    // move the popup slightly away from the icon
    .ag-popup-child {
        margin-top: 8px;
    }

    .ag-header-row {
        font-weight: 600;
    }

    .ag-header {
        border-bottom: 2px solid var(--table-header-border-bottom-color);
    }

    .ag-root-wrapper {
        border: none;
        border-bottom: 2px solid var(--table-border-bottom-color);
    }

    .ag-row:has(+ .ag-row.ag-row-selected) {
        --ag-row-border-color: var(--selectable-table-row-selected-border-color);
    }

    .ag-row {
        font-size: var(--ag-font-size);

        &.ag-row-selected {
            --ag-row-border-color: var(--selectable-table-row-selected-border-color);
        }
    }
    .ag-cell {
        -webkit-font-smoothing: antialiased;
    }

    .ag-menu {
        background-color: var(--ui-01);
    }

    input[class^='ag-'][type='text'] {
        min-height: 32px;
    }

    .ag-select .ag-picker-field-wrapper {
        min-height: 32px;
        border: var(--ag-borders-input) var(--ag-input-border-color);
        border-radius: var(--ag-border-radius);
    }

    .ag-floating-filter {
        border-top: none !important;
    }

    .ag-header-row {
        --ag-header-height: 44px;
    }

    .ag-row-hover.ag-row-selected::before {
        // TODO: why different to NDBX table? specific ag-grid variable?
        background-color: #e6f4f6;
        background-color: var(--selectable-table-row-selected-hover-background-color);
        background-image: none;
    }

    // pagination
    .ag-paging-button {
        color: var(--pagination-link-color);
        &.ag-disabled {
            color: var(--pagination-link-disabled-color);
            cursor: not-allowed;
        }
    }
}

.ag-theme-aquila-dense {
    --ag-row-height: 40px;
}

.ag-theme-aquila-zebra {
    --ag-odd-row-background-color: var(--zebra-table-even-row-background-color);
    --ag-row-border-style: none;
}
