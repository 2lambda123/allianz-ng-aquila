@import "../shared-styles/index";

:host {
  display: block;

  input {
    position: absolute;
    height: 0;
    width: 0;
    overflow: hidden;
    opacity: 0;
  }

  label {
    border: v(selectable-card-border-width) solid v(selectable-card-border-color);
    display: block;
    position: relative;
    padding: nx-spacer(s);
    cursor: pointer;
    width: 100%;
    @include var(border-radius, selectable-card-border-radius);
    @include var(background, selectable-card-background-color);
  }

  &:focus {
    outline: none;
  }

  &::-moz-focus-inner {
    border: 0;
  }

  input:checked + label {
    @include var(background, selectable-card-background-selected-color);
    @include var(border-color, selectable-card-border-selected-color);

    ::ng-deep nx-icon.checked-icon {
      &::after {
        display: none;
      }

      &::before, svg {
        display: block;
      }
    }

    &:hover {
      ::ng-deep nx-icon.checked-icon {
        color: var(--selectable-card-icon-color);
      }
    }
  }

  label:hover,
  label:active {
    @include var(background, selectable-card-background-hover-color);
    @include var(border-color, selectable-card-border-hover-color);
  }

  label:hover {
   ::ng-deep nx-icon.checked-icon {
      color: var(--selectable-card-unchecked-icon-hover-color);

      &::after {
        display: none;
      }

      &::before, svg {
        display: block;
      }
    }
  }

  label:active {
    background-color: var(--selectable-card-background-active-color);
    ::ng-deep nx-icon.checked-icon {
      @include var(color, selectable-card-icon-color);
    }
  }

  input:checked + label:hover {
    @include var(background, selectable-card-background-selected-hover-color);
  }

  // Prevents header contents from overflowing the icon
  ::ng-deep nx-card-header:before {
    content: '';
    display: block;
    width: calc(#{nx-spacer(m)} + 4px);
    height: calc(#{nx-spacer(m)} + 4px);
    float: right;

    [dir="rtl"] & {
      float: left;
    }
  }

  // reset hover styles for devices that don't support hover
  @media (hover: none) {
    label:hover {
      @include var(background, selectable-card-background-color);
      @include var(border-color, selectable-card-border-color);
    }

    input:checked + label:hover {
      @include var(background, selectable-card-background-selected-color);
    }
  }

  ::ng-deep nx-icon.checked-icon {
    position: absolute;
    right: nx-spacer(s);
    top: nx-spacer(s);
    @include var(color, selectable-card-icon-color);

    &::after {
      content: '';
      display: block;
      width: 20px;
      height: 20px;
      border: 1px solid var(--selectable-card-icon-placeholder-border-color);
      border-radius: 50%;
    }

    &::before, svg {
      display: none;
    }

    [dir="rtl"] & {
      right: auto;
      left: nx-spacer(s);
    }
  }

  ::ng-deep nx-error:not(.nx-error--message) {
    margin-top: 8px;
  }

  ::ng-deep nx-error.nx-error--message {
    margin-top: 12px;
  }
}

:host(.is-disabled) {
  label {
    @include var(border-color, selectable-card-border-disabled-color);
    cursor: not-allowed;

    ::ng-deep nx-icon.checked-icon {
      opacity: 40%;
    }
  }

  label:hover {
    @include var(background, selectable-card-background-disabled-color);

    ::ng-deep nx-icon.checked-icon {
      &::after {
        display: block;
      }

      &::before, svg {
        display: none;
      }
    }
  }

  input:checked + label {
    @include var(background, selectable-card-background-disabled-selected-color);
    @include var(border-color, selectable-card-border-disabled-selected-color);

    ::ng-deep nx-icon.checked-icon {
      display: block;
    }
  }
}

:host(.has-error) {

  label,
  label:hover,
  input:checked + label,
  input:checked + label:hover {
    @include var(border-color, selectable-card-border-error-color);
  }
}

input.cdk-keyboard-focused + label {
  @include focus-style;
}

@media screen and (-ms-high-contrast: active) {
  :host,
  :host(.has-error) {
    label,
    label:hover {
      border-color: buttonText;
    }

    input:checked + label,
    input:checked + label:hover {
      border-width: nx-border-size(l);
      padding: nx-spacer(s) - nx-border-size(l) + nx-border-size(xs);
      border-color: highlight;

      ::ng-deep nx-icon.checked-icon {
        color: CanvasText;
      }
    }
  }

  :host(.is-disabled) {
    label,
    input:checked + label {
      border-color: GrayText;
      color: GrayText;

      ::ng-deep nx-icon.checked-icon {
        color: GrayText;
      }
    }
  }
}
